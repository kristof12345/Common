@namespace Common.Web
@inherits AppInput<TEnum>
@typeparam TEnum

@using Syncfusion.Blazor.Inputs
@using Common.Application
@using Syncfusion.Blazor.DropDowns
@using Microsoft.AspNetCore.Components.Forms

<p style=@($"width: {Width}")>
    <SfDropDownList Value=@(EnumExtensions.GetAttributeValue(Value)) ValueChanged=@HandleValueChange DataSource=@(EnumExtensions.GetAttributeList<TEnum>().Except(Except)) FloatLabelType=@FloatLabelType.Auto Placeholder=@Label CssClass="e-outline e-bigger" Enabled=@(!Disabled) TValue=string TItem=string />
    @if (ValidationExpression != null)
    {
        <ValidationMessage For=@ValidationExpression />
    }
</p>

@code
{
    [Parameter]
    public List<string> Except { get; set; } = new List<string>();

    private async Task HandleValueChange(string value)
    {
        if (!string.IsNullOrEmpty(value))
        {
            var EnumValue = EnumExtensions.GetValueFromAttribute<TEnum>(value);
            if (Value.ToString() != EnumValue.ToString())
            {
                await ValueChanged.InvokeAsync(EnumValue);
                await OnInput.InvokeAsync();
            }
        }
    }
}
