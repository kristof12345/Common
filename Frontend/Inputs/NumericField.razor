@namespace Common.Web
@inherits AppInput<T>
@typeparam T

@using Syncfusion.Blazor.Inputs
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Web

<div class="input" style=@($"width: {Width}")>
    <SfNumericTextBox @oninput=@HandleInput Value=@Value ValueChanged=@ValueChanged Min=@Min Max=@Max Step=@Step FloatLabelType=@FloatLabelType.Auto Placeholder=@Label CssClass="e-outline e-bigger form-input" Enabled=@(!Disabled) TValue="T" Format=@Format ValueExpression=@ValidationExpression autofocus />
    @if (ValidationExpression != null)
    {
        <ValidationMessage For=@ValidationExpression />
    }
</div>

@code
{
    [Parameter]
    public T Min { get; set; }

    [Parameter]
    public T Max { get; set; }

    [Parameter]
    public T Step { get; set; }

    [Parameter]
    public string Format { get; set; }

    public void HandleInput(ChangeEventArgs args)
    {
        if ((string)args.Value == string.Empty)
        {
            this.ValueChanged.InvokeAsync((T)Convert.ChangeType(0, typeof(T)));
        }
        else
        {
            this.ValueChanged.InvokeAsync((T)Convert.ChangeType(args.Value, typeof(T)));
        }
    }
}