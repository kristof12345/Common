<div class="finance-chart" style="height: 450px;">
    @if (Visibility == "hidden")
    {
        <LoadingIndicator />
    }

    @if (Data != null)
    {
        <div class=@("chart " + Visibility)>
            <SfChart Theme=@Theme.Material Background=@Colors.Transparent Height="350">

                <ChartPrimaryXAxis ValueType=@Syncfusion.Blazor.Charts.ValueType.DateTimeCategory LabelFormat="  yyyy.MM.dd  " LabelIntersectAction=@LabelIntersectAction.Hide EdgeLabelPlacement=@EdgeLabelPlacement.Shift>
                    <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
                </ChartPrimaryXAxis>

                <ChartPrimaryYAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Double" Span="1" OpposedPosition="true" LabelIntersectAction=@LabelIntersectAction.Hide RowIndex="1" RangePadding=@ChartRangePadding.Additional Minimum=@Minimum Maximum=@Maximum>
                    <ChartAxisMajorGridLines Width="1"></ChartAxisMajorGridLines>
                </ChartPrimaryYAxis>

                <ChartAxes>
                    <ChartAxis Name="Volume" ValueType="Syncfusion.Blazor.Charts.ValueType.Double" RowIndex="1" Visible="false" Maximum=@VolumeMax Minimum=@VolumeMin>
                        <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
                    </ChartAxis>
                </ChartAxes>

                <ChartRows>
                    <ChartRow Height="0%"></ChartRow>
                    <ChartRow Height="100%"></ChartRow>
                </ChartRows>

                <ChartSeriesCollection>
                    <ChartSeries DataSource=@RangedData XName="Date" Open="Open" Close="Close" High="High" Low="Low" Type=@ChartSeriesType.Candle />
                    <ChartSeries DataSource=@RangedData XName="Date" YName="Volume" Type=@ChartSeriesType.Column Fill=@Colors.Warning YAxisName="Volume" />
                </ChartSeriesCollection>

            </SfChart>
        </div>

        <div class=@("range " + Visibility)>
            <SfRangeNavigator Value=@Range ValueChanged=@RangeChanged ValueType="Syncfusion.Blazor.Charts.RangeValueType.DateTime" Theme=@Theme.Material Height="100" IntervalType=@IntervalType Interval="1" LabelFormat=@IntervalType.ToFormat()>
                <RangeNavigatorEvents Loaded=@OnRangeLoaded></RangeNavigatorEvents>
                <RangeNavigatorSeriesCollection>
                    <RangeNavigatorSeries DataSource=@Data.Sparse(50) Type=@RangeNavigatorType.Line Fill=@Colors.Warning Width="2" XName="Date" YName="Close" />
                </RangeNavigatorSeriesCollection>
            </SfRangeNavigator>
        </div>
    }
</div>

@code
{
    [Parameter]
    [EditorRequired]
    public IEnumerable<StockPrice> Data { get; set; }

    [Parameter]
    [EditorRequired]
    public DateTime StartDate { get; set; }

    [Parameter]
    [EditorRequired]
    public DateTime EndDate { get; set; }

    [Parameter]
    public decimal? Minimum { get; set; } = null;

    [Parameter]
    public decimal? Maximum { get; set; } = null;

    [Parameter]
    public RangeIntervalType IntervalType { get; set; } = RangeIntervalType.Auto;

    private DateTime[] Range { get; set; }

    private IEnumerable<StockPrice> RangedData { get => Data.Where(d => d.Date >= Range[0] && d.Date <= Range[1]); }

    private string Visibility { get; set; } = "hidden";

    private decimal VolumeMin { get => RangedData.Any() ? RangedData.Min(s => s.Volume) * 1 : 0; }

    private decimal VolumeMax { get => RangedData.Any() ? RangedData.Max(s => s.Volume) * 4 : 0; }

    protected override void OnParametersSet()
    {
        Range = new DateTime[] { StartDate, EndDate };
    }

    private void RangeChanged(object args)
    {
        Range = (DateTime[])args;
    }

    private void OnRangeLoaded(object args)
    {
        Visibility = "visible";
    }
}