@inherits LayoutComponentBase

@namespace Common.Demo

@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Notifications

<style>:root {--primary-color: @Colors.Primary;--secondary-color: @Colors.Secondary; --frame-color: @Colors.Frame; } </style>
<style>
    .sf-license-warning {
        display: none;
    }
</style>


<MenuBar Title="Demo App" OnMenuClick=@(() => {Opened = !Opened;}) />
@if (Opened)
{
    <SfSidebar IsOpen=Opened Changed=@(() => {Opened = false;}) Width="380px" Position=@SidebarPosition.Right CloseOnDocumentClick="true" ShowBackdrop="true" Type=@SidebarType.Push Animate="true">
        <ThemeToggle />
    </SfSidebar>
}

<div class="page">
    <div class="sidebar">
        <ul class="nav flex-column">
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Home
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="form">
                    <span class="oi oi-plus" aria-hidden="true"></span> Form
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="stock">
                    <span class="oi oi-plus" aria-hidden="true"></span> Stock
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="drag">
                    <span class="oi oi-plus" aria-hidden="true"></span> Drag and drop
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="chart">
                    <span class="oi oi-plus" aria-hidden="true"></span> Chart
                </NavLink>
            </li>
        </ul>
    </div>

    <div class="main">
        <div class="content px-4">
            @Body
        </div>
    </div>
</div>

<SfToast @ref="ToastObj">
    <ToastPosition X="Right" Y="Bottom"></ToastPosition>
</SfToast>

@code
{
    [Inject]
    protected ToastService Toaster { get; set; }

    private SfToast ToastObj;

    private bool Opened { get; set; } = false;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            Toaster.Toaster = ToastObj;
        }
    }
}
